Terminals unused in grammar

    TOK_BLOCK
    TOK_CALL


Grammar

    0 $accept: program $end

    1 program: program token
    2        | %empty

    3 token: '('
    4      | ')'
    5      | '['
    6      | ']'
    7      | '{'
    8      | '}'
    9      | ';'
   10      | ','
   11      | '='
   12      | '+'
   13      | '-'
   14      | '*'
   15      | '/'
   16      | '%'
   17      | TOK_NOT
   18      | TOK_PTR
   19      | TOK_ROOT
   20      | TOK_VOID
   21      | TOK_INT
   22      | TOK_STRING
   23      | TOK_IF
   24      | TOK_ELSE
   25      | TOK_WHILE
   26      | TOK_RETURN
   27      | TOK_STRUCT
   28      | TOK_NULLPTR
   29      | TOK_ARRAY
   30      | TOK_ARROW
   31      | TOK_ALLOC
   32      | TOK_EQ
   33      | TOK_NE
   34      | TOK_LT
   35      | TOK_LE
   36      | TOK_GT
   37      | TOK_GE
   38      | TOK_IDENT
   39      | TOK_INTCON
   40      | TOK_CHARCON
   41      | TOK_STRINGCON


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 16
    '(' (40) 3
    ')' (41) 4
    '*' (42) 14
    '+' (43) 12
    ',' (44) 10
    '-' (45) 13
    '/' (47) 15
    ';' (59) 9
    '=' (61) 11
    '[' (91) 5
    ']' (93) 6
    '{' (123) 7
    '}' (125) 8
    error (256)
    TOK_VOID (258) 20
    TOK_INT (259) 21
    TOK_STRING (260) 22
    TOK_IF (261) 23
    TOK_ELSE (262) 24
    TOK_WHILE (263) 25
    TOK_RETURN (264) 26
    TOK_STRUCT (265) 27
    TOK_NULLPTR (266) 28
    TOK_ARRAY (267) 29
    TOK_ARROW (268) 30
    TOK_ALLOC (269) 31
    TOK_PTR (270) 18
    TOK_EQ (271) 32
    TOK_NE (272) 33
    TOK_LT (273) 34
    TOK_LE (274) 35
    TOK_GT (275) 36
    TOK_GE (276) 37
    TOK_NOT (277) 17
    TOK_IDENT (278) 38
    TOK_INTCON (279) 39
    TOK_CHARCON (280) 40
    TOK_STRINGCON (281) 41
    TOK_ROOT (282) 19
    TOK_BLOCK (283)
    TOK_CALL (284)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program (45)
        on left: 1 2
        on right: 0 1
    token (46)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
        on right: 1


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    1 program: program . token

    $end           shift, and go to state 2
    TOK_VOID       shift, and go to state 3
    TOK_INT        shift, and go to state 4
    TOK_STRING     shift, and go to state 5
    TOK_IF         shift, and go to state 6
    TOK_ELSE       shift, and go to state 7
    TOK_WHILE      shift, and go to state 8
    TOK_RETURN     shift, and go to state 9
    TOK_STRUCT     shift, and go to state 10
    TOK_NULLPTR    shift, and go to state 11
    TOK_ARRAY      shift, and go to state 12
    TOK_ARROW      shift, and go to state 13
    TOK_ALLOC      shift, and go to state 14
    TOK_PTR        shift, and go to state 15
    TOK_EQ         shift, and go to state 16
    TOK_NE         shift, and go to state 17
    TOK_LT         shift, and go to state 18
    TOK_LE         shift, and go to state 19
    TOK_GT         shift, and go to state 20
    TOK_GE         shift, and go to state 21
    TOK_NOT        shift, and go to state 22
    TOK_IDENT      shift, and go to state 23
    TOK_INTCON     shift, and go to state 24
    TOK_CHARCON    shift, and go to state 25
    TOK_STRINGCON  shift, and go to state 26
    TOK_ROOT       shift, and go to state 27
    '('            shift, and go to state 28
    ')'            shift, and go to state 29
    '['            shift, and go to state 30
    ']'            shift, and go to state 31
    '{'            shift, and go to state 32
    '}'            shift, and go to state 33
    ';'            shift, and go to state 34
    ','            shift, and go to state 35
    '='            shift, and go to state 36
    '+'            shift, and go to state 37
    '-'            shift, and go to state 38
    '*'            shift, and go to state 39
    '/'            shift, and go to state 40
    '%'            shift, and go to state 41

    token  go to state 42


State 2

    0 $accept: program $end .

    $default  accept


State 3

   20 token: TOK_VOID .

    $default  reduce using rule 20 (token)


State 4

   21 token: TOK_INT .

    $default  reduce using rule 21 (token)


State 5

   22 token: TOK_STRING .

    $default  reduce using rule 22 (token)


State 6

   23 token: TOK_IF .

    $default  reduce using rule 23 (token)


State 7

   24 token: TOK_ELSE .

    $default  reduce using rule 24 (token)


State 8

   25 token: TOK_WHILE .

    $default  reduce using rule 25 (token)


State 9

   26 token: TOK_RETURN .

    $default  reduce using rule 26 (token)


State 10

   27 token: TOK_STRUCT .

    $default  reduce using rule 27 (token)


State 11

   28 token: TOK_NULLPTR .

    $default  reduce using rule 28 (token)


State 12

   29 token: TOK_ARRAY .

    $default  reduce using rule 29 (token)


State 13

   30 token: TOK_ARROW .

    $default  reduce using rule 30 (token)


State 14

   31 token: TOK_ALLOC .

    $default  reduce using rule 31 (token)


State 15

   18 token: TOK_PTR .

    $default  reduce using rule 18 (token)


State 16

   32 token: TOK_EQ .

    $default  reduce using rule 32 (token)


State 17

   33 token: TOK_NE .

    $default  reduce using rule 33 (token)


State 18

   34 token: TOK_LT .

    $default  reduce using rule 34 (token)


State 19

   35 token: TOK_LE .

    $default  reduce using rule 35 (token)


State 20

   36 token: TOK_GT .

    $default  reduce using rule 36 (token)


State 21

   37 token: TOK_GE .

    $default  reduce using rule 37 (token)


State 22

   17 token: TOK_NOT .

    $default  reduce using rule 17 (token)


State 23

   38 token: TOK_IDENT .

    $default  reduce using rule 38 (token)


State 24

   39 token: TOK_INTCON .

    $default  reduce using rule 39 (token)


State 25

   40 token: TOK_CHARCON .

    $default  reduce using rule 40 (token)


State 26

   41 token: TOK_STRINGCON .

    $default  reduce using rule 41 (token)


State 27

   19 token: TOK_ROOT .

    $default  reduce using rule 19 (token)


State 28

    3 token: '(' .

    $default  reduce using rule 3 (token)


State 29

    4 token: ')' .

    $default  reduce using rule 4 (token)


State 30

    5 token: '[' .

    $default  reduce using rule 5 (token)


State 31

    6 token: ']' .

    $default  reduce using rule 6 (token)


State 32

    7 token: '{' .

    $default  reduce using rule 7 (token)


State 33

    8 token: '}' .

    $default  reduce using rule 8 (token)


State 34

    9 token: ';' .

    $default  reduce using rule 9 (token)


State 35

   10 token: ',' .

    $default  reduce using rule 10 (token)


State 36

   11 token: '=' .

    $default  reduce using rule 11 (token)


State 37

   12 token: '+' .

    $default  reduce using rule 12 (token)


State 38

   13 token: '-' .

    $default  reduce using rule 13 (token)


State 39

   14 token: '*' .

    $default  reduce using rule 14 (token)


State 40

   15 token: '/' .

    $default  reduce using rule 15 (token)


State 41

   16 token: '%' .

    $default  reduce using rule 16 (token)


State 42

    1 program: program token .

    $default  reduce using rule 1 (program)
