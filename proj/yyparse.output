Terminals unused in grammar

    TOK_VOID
    TOK_IF
    TOK_ELSE
    TOK_WHILE
    TOK_RETURN
    TOK_STRUCT
    TOK_NULLPTR
    TOK_ARRAY
    TOK_ARROW
    TOK_ALLOC
    TOK_PTR
    TOK_CHARCON
    TOK_ROOT
    TOK_BLOCK
    TOK_CALL
    TOK_FUNCTION
    TOK_PARAM
    TOK_TYPE_ID
    '['


Grammar

    0 $accept: prog $end

    1 prog: prog stat
    2     | %empty

    3 stat: decl
    4     | assign

    5 decl: typeid '=' expr ';'
    6     | typeid ';'

    7 typeid: type TOK_IDENT

    8 type: TOK_INT
    9     | TOK_FLOAT
   10     | TOK_STRING

   11 assign: variable '=' expr ';'

   12 expr: '(' expr ')'
   13     | expr '^' expr
   14     | '+' expr
   15     | '-' expr
   16     | TOK_NOT expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | expr '%' expr
   20     | expr '+' expr
   21     | expr '-' expr
   22     | expr TOK_EQ expr
   23     | expr TOK_NE expr
   24     | expr TOK_LT expr
   25     | expr TOK_LE expr
   26     | expr TOK_GT expr
   27     | expr TOK_GE expr
   28     | constant
   29     | variable

   30 constant: TOK_INTCON
   31         | TOK_STRINGCON
   32         | TOK_FLOATCON

   33 variable: TOK_IDENT


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 19
    '(' (40) 12
    ')' (41) 12
    '*' (42) 17
    '+' (43) 14 20
    '-' (45) 15 21
    '/' (47) 18
    ';' (59) 5 6 11
    '=' (61) 5 11
    '[' (91)
    '^' (94) 13
    error (256)
    TOK_VOID (258)
    TOK_INT (259) 8
    TOK_STRING (260) 10
    TOK_FLOAT (261) 9
    TOK_IF (262)
    TOK_ELSE (263)
    TOK_WHILE (264)
    TOK_RETURN (265)
    TOK_STRUCT (266)
    TOK_NULLPTR (267)
    TOK_ARRAY (268)
    TOK_ARROW (269)
    TOK_ALLOC (270)
    TOK_PTR (271)
    TOK_EQ (272) 22
    TOK_NE (273) 23
    TOK_LT (274) 24
    TOK_LE (275) 25
    TOK_GT (276) 26
    TOK_GE (277) 27
    TOK_NOT (278) 16
    TOK_IDENT (279) 7 33
    TOK_INTCON (280) 30
    TOK_CHARCON (281)
    TOK_STRINGCON (282) 31
    TOK_FLOATCON (283) 32
    TOK_ROOT (284)
    TOK_BLOCK (285)
    TOK_CALL (286)
    TOK_FUNCTION (287)
    TOK_PARAM (288)
    TOK_TYPE_ID (289)
    UNARY (290)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    prog (48)
        on left: 1 2
        on right: 0 1
    stat (49)
        on left: 3 4
        on right: 1
    decl (50)
        on left: 5 6
        on right: 3
    typeid (51)
        on left: 7
        on right: 5 6
    type (52)
        on left: 8 9 10
        on right: 7
    assign (53)
        on left: 11
        on right: 4
    expr (54)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 5 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
    constant (55)
        on left: 30 31 32
        on right: 28
    variable (56)
        on left: 33
        on right: 11 29


State 0

    0 $accept: . prog $end

    $default  reduce using rule 2 (prog)

    prog  go to state 1


State 1

    0 $accept: prog . $end
    1 prog: prog . stat

    $end        shift, and go to state 2
    TOK_INT     shift, and go to state 3
    TOK_STRING  shift, and go to state 4
    TOK_FLOAT   shift, and go to state 5
    TOK_IDENT   shift, and go to state 6

    stat      go to state 7
    decl      go to state 8
    typeid    go to state 9
    type      go to state 10
    assign    go to state 11
    variable  go to state 12


State 2

    0 $accept: prog $end .

    $default  accept


State 3

    8 type: TOK_INT .

    $default  reduce using rule 8 (type)


State 4

   10 type: TOK_STRING .

    $default  reduce using rule 10 (type)


State 5

    9 type: TOK_FLOAT .

    $default  reduce using rule 9 (type)


State 6

   33 variable: TOK_IDENT .

    $default  reduce using rule 33 (variable)


State 7

    1 prog: prog stat .

    $default  reduce using rule 1 (prog)


State 8

    3 stat: decl .

    $default  reduce using rule 3 (stat)


State 9

    5 decl: typeid . '=' expr ';'
    6     | typeid . ';'

    '='  shift, and go to state 13
    ';'  shift, and go to state 14


State 10

    7 typeid: type . TOK_IDENT

    TOK_IDENT  shift, and go to state 15


State 11

    4 stat: assign .

    $default  reduce using rule 4 (stat)


State 12

   11 assign: variable . '=' expr ';'

    '='  shift, and go to state 16


State 13

    5 decl: typeid '=' . expr ';'

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 24
    constant  go to state 25
    variable  go to state 26


State 14

    6 decl: typeid ';' .

    $default  reduce using rule 6 (decl)


State 15

    7 typeid: type TOK_IDENT .

    $default  reduce using rule 7 (typeid)


State 16

   11 assign: variable '=' . expr ';'

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 27
    constant  go to state 25
    variable  go to state 26


State 17

   16 expr: TOK_NOT . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 28
    constant  go to state 25
    variable  go to state 26


State 18

   30 constant: TOK_INTCON .

    $default  reduce using rule 30 (constant)


State 19

   31 constant: TOK_STRINGCON .

    $default  reduce using rule 31 (constant)


State 20

   32 constant: TOK_FLOATCON .

    $default  reduce using rule 32 (constant)


State 21

   14 expr: '+' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 29
    constant  go to state 25
    variable  go to state 26


State 22

   15 expr: '-' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 30
    constant  go to state 25
    variable  go to state 26


State 23

   12 expr: '(' . expr ')'

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 31
    constant  go to state 25
    variable  go to state 26


State 24

    5 decl: typeid '=' expr . ';'
   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    TOK_EQ  shift, and go to state 32
    TOK_NE  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    TOK_LE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_GE  shift, and go to state 37
    '+'     shift, and go to state 38
    '-'     shift, and go to state 39
    '*'     shift, and go to state 40
    '/'     shift, and go to state 41
    '%'     shift, and go to state 42
    '^'     shift, and go to state 43
    ';'     shift, and go to state 44


State 25

   28 expr: constant .

    $default  reduce using rule 28 (expr)


State 26

   29 expr: variable .

    $default  reduce using rule 29 (expr)


State 27

   11 assign: variable '=' expr . ';'
   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    TOK_EQ  shift, and go to state 32
    TOK_NE  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    TOK_LE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_GE  shift, and go to state 37
    '+'     shift, and go to state 38
    '-'     shift, and go to state 39
    '*'     shift, and go to state 40
    '/'     shift, and go to state 41
    '%'     shift, and go to state 42
    '^'     shift, and go to state 43
    ';'     shift, and go to state 45


State 28

   13 expr: expr . '^' expr
   16     | TOK_NOT expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 16 (expr)


State 29

   13 expr: expr . '^' expr
   14     | '+' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 14 (expr)


State 30

   13 expr: expr . '^' expr
   15     | '-' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 15 (expr)


State 31

   12 expr: '(' expr . ')'
   13     | expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    TOK_EQ  shift, and go to state 32
    TOK_NE  shift, and go to state 33
    TOK_LT  shift, and go to state 34
    TOK_LE  shift, and go to state 35
    TOK_GT  shift, and go to state 36
    TOK_GE  shift, and go to state 37
    '+'     shift, and go to state 38
    '-'     shift, and go to state 39
    '*'     shift, and go to state 40
    '/'     shift, and go to state 41
    '%'     shift, and go to state 42
    '^'     shift, and go to state 43
    ')'     shift, and go to state 46


State 32

   22 expr: expr TOK_EQ . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 47
    constant  go to state 25
    variable  go to state 26


State 33

   23 expr: expr TOK_NE . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 48
    constant  go to state 25
    variable  go to state 26


State 34

   24 expr: expr TOK_LT . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 49
    constant  go to state 25
    variable  go to state 26


State 35

   25 expr: expr TOK_LE . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 50
    constant  go to state 25
    variable  go to state 26


State 36

   26 expr: expr TOK_GT . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 51
    constant  go to state 25
    variable  go to state 26


State 37

   27 expr: expr TOK_GE . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 52
    constant  go to state 25
    variable  go to state 26


State 38

   20 expr: expr '+' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 53
    constant  go to state 25
    variable  go to state 26


State 39

   21 expr: expr '-' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 54
    constant  go to state 25
    variable  go to state 26


State 40

   17 expr: expr '*' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 55
    constant  go to state 25
    variable  go to state 26


State 41

   18 expr: expr '/' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 56
    constant  go to state 25
    variable  go to state 26


State 42

   19 expr: expr '%' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 57
    constant  go to state 25
    variable  go to state 26


State 43

   13 expr: expr '^' . expr

    TOK_NOT        shift, and go to state 17
    TOK_IDENT      shift, and go to state 6
    TOK_INTCON     shift, and go to state 18
    TOK_STRINGCON  shift, and go to state 19
    TOK_FLOATCON   shift, and go to state 20
    '+'            shift, and go to state 21
    '-'            shift, and go to state 22
    '('            shift, and go to state 23

    expr      go to state 58
    constant  go to state 25
    variable  go to state 26


State 44

    5 decl: typeid '=' expr ';' .

    $default  reduce using rule 5 (decl)


State 45

   11 assign: variable '=' expr ';' .

    $default  reduce using rule 11 (assign)


State 46

   12 expr: '(' expr ')' .

    $default  reduce using rule 12 (expr)


State 47

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   22     | expr TOK_EQ expr .
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 22 (expr)


State 48

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   23     | expr TOK_NE expr .
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 23 (expr)


State 49

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   24     | expr TOK_LT expr .
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 24 (expr)


State 50

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   25     | expr TOK_LE expr .
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 25 (expr)


State 51

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   26     | expr TOK_GT expr .
   27     | expr . TOK_GE expr

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 26 (expr)


State 52

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr
   27     | expr TOK_GE expr .

    '+'  shift, and go to state 38
    '-'  shift, and go to state 39
    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 27 (expr)


State 53

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   20     | expr '+' expr .
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 20 (expr)


State 54

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   21     | expr '-' expr .
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '*'  shift, and go to state 40
    '/'  shift, and go to state 41
    '%'  shift, and go to state 42
    '^'  shift, and go to state 43

    $default  reduce using rule 21 (expr)


State 55

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   17     | expr '*' expr .
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 17 (expr)


State 56

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 18 (expr)


State 57

   13 expr: expr . '^' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   19     | expr '%' expr .
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 19 (expr)


State 58

   13 expr: expr . '^' expr
   13     | expr '^' expr .
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '%' expr
   20     | expr . '+' expr
   21     | expr . '-' expr
   22     | expr . TOK_EQ expr
   23     | expr . TOK_NE expr
   24     | expr . TOK_LT expr
   25     | expr . TOK_LE expr
   26     | expr . TOK_GT expr
   27     | expr . TOK_GE expr

    '^'  shift, and go to state 43

    $default  reduce using rule 13 (expr)
